<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbOk.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>